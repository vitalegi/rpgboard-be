package it.vitalegi.rpgboard.be.data;

import io.vertx.codegen.annotations.DataObject;
import io.vertx.codegen.format.SnakeCase;
import io.vertx.core.json.JsonObject;
import io.vertx.sqlclient.templates.annotations.Column;
import io.vertx.sqlclient.templates.annotations.RowMapped;
import it.vitalegi.rpgboard.be.repository.querybuilder.pg.Table;
import it.vitalegi.rpgboard.be.repository.querybuilder.pg.TableFactory;

import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

@DataObject(generateConverter = true)
@RowMapped(formatter = SnakeCase.class)
public class Board {
  public static final String BOARD_ID = "board_id";
  public static final String GAME_ID = "game_id";
  public static final String NAME = "name";
  public static final String IS_ACTIVE = "is_active";
  public static final String VISIBILITY_POLICY = "visibility_policy";
  public static final String USER_ID = "user_id";
  public static final String CREATE_DATE = "create_date";
  public static final String LAST_UPDATE_DATE = "last_update";
  public static final Table BUILDER =
      TableFactory.init()
          .tableName("RPG_Board")
          .primaryKey(BOARD_ID)
          .autoGenerated(BOARD_ID)
          .fields(
              BOARD_ID,
              GAME_ID,
              NAME,
              IS_ACTIVE,
              VISIBILITY_POLICY,
              USER_ID,
              CREATE_DATE,
              LAST_UPDATE_DATE)
          .build();

  @Column(name = BOARD_ID)
  UUID boardId;

  @Column(name = GAME_ID)
  UUID gameId;

  @Column(name = NAME)
  String name;

  @Column(name = IS_ACTIVE)
  Boolean active;

  @Column(name = VISIBILITY_POLICY)
  String visibilityPolicy;

  @Column(name = USER_ID)
  UUID userId;

  @Column(name = CREATE_DATE)
  OffsetDateTime createDate;

  @Column(name = LAST_UPDATE_DATE)
  OffsetDateTime lastUpdate;

  public static Map<String, Object> map(
      UUID boardId,
      UUID gameId,
      String name,
      Boolean active,
      String visibilityPolicy,
      UUID userId,
      OffsetDateTime createDate,
      OffsetDateTime lastUpdate) {
    Map<String, Object> map = new HashMap<>();
    map.put(BOARD_ID, boardId);
    map.put(GAME_ID, gameId);
    map.put(NAME, name);
    map.put(IS_ACTIVE, active);
    map.put(VISIBILITY_POLICY, visibilityPolicy);
    map.put(USER_ID, userId);
    map.put(CREATE_DATE, createDate);
    map.put(LAST_UPDATE_DATE, lastUpdate);

    return map;
  }

  public static Map<String, Object> map(Board entry) {
    return map(
        entry.getBoardId(),
        entry.getGameId(),
        entry.getName(),
        entry.getActive(),
        entry.getVisibilityPolicy(),
        entry.getUserId(),
        entry.getCreateDate(),
        entry.getLastUpdate());
  }

  public static Map<String, Object> mapPK(UUID boardId) {
    Map<String, Object> map = new HashMap<>();
    map.put(BOARD_ID, boardId);
    return map;
  }

  public JsonObject toJson() {
    JsonObject json = new JsonObject();
    BoardConverter.toJson(this, json);
    return json;
  }

  public UUID getBoardId() {
    return boardId;
  }

  public void setBoardId(UUID boardId) {
    this.boardId = boardId;
  }

  public UUID getGameId() {
    return gameId;
  }

  public void setGameId(UUID gameId) {
    this.gameId = gameId;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public String getVisibilityPolicy() {
    return visibilityPolicy;
  }

  public void setVisibilityPolicy(String visibilityPolicy) {
    this.visibilityPolicy = visibilityPolicy;
  }

  public UUID getUserId() {
    return userId;
  }

  public void setUserId(UUID userId) {
    this.userId = userId;
  }

  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }

  public void setLastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  @Override
  public String toString() {
    return "Board{"
        + "boardId="
        + boardId
        + ", gameId="
        + gameId
        + ", name='"
        + name
        + '\''
        + ", active="
        + active
        + ", visibilityPolicy='"
        + visibilityPolicy
        + '\''
        + ", userId="
        + userId
        + ", createDate="
        + createDate
        + ", lastUpdate="
        + lastUpdate
        + '}';
  }
}
